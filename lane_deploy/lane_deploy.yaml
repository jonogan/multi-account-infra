Metadata:
  License: Apache-2.0
Description: 'Creates all required infrastructure to run base AWS workloads in an account, 
including VPCs, Subnets, Security, RTs, ACLs, DNS Resolvers to and from onprem'

Parameters:
  EnvironmentName:
    Type: String
  VpcCidr:
    Type: String
  PublicSubnet1CIDR:
    Type: String
  PublicSubnet2CIDR:
    Type: String
  PublicSubnet3CIDR:
    Type: String
  PrivateSubnet1CIDR:
    Type: String
  PrivateSubnet2CIDR:
    Type: String
  PrivateSubnet3CIDR:
    Type: String

Conditions:
  IsStg: !Equals
    - !Ref EnvironmentName
    - stg-01
  IsProd: !Equals
    - !Ref EnvironmentName
    - prod-01

  IsProdAccount: !Or 
    - !Condition IsStg
    - !Condition IsProd

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-IGW

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

######### SUBNETS ##########
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2a
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PUB1-2a

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2b
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PUB1-2b

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2a
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PRIV1-2a

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2b
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PRIV1-2b

  PrivateSubnetOutputParameters:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${EnvironmentName}-private-subnets
      Type: String
      Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
      Tier: Standard
      Description: !Sub Private Subnets for ${EnvironmentName} vpc.
      AllowedPattern: "(?!^ +$)^.+$"
      Tags:
        Name: !Sub ${EnvironmentName}-private-subnets
  
  PublicSubnetOutputParameters:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${EnvironmentName}-public-subnets
      Type: String
      Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
      Tier: Standard
      Description: !Sub Public Subnets for ${EnvironmentName} vpc.
      AllowedPattern: "(?!^ +$)^.+$"
      Tags:
        Name: !Sub ${EnvironmentName}-public-subnets

  DefaultNoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "no-ingress-sg"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

  IngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http and https to client host
        VpcId: !Ref VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

Outputs:
  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]

  SecurityGroup:
    Description: A list of the security groups
    Value: !Join [ ",", [ !Ref DefaultNoIngressSecurityGroup, !Ref IngressSecurityGroup ]]